mod libc {
    extern fn puts(_: &const u8) -> i32;
}

fn write_number<T>(val: T) {
    let buf: [u8; 16];
    buf[15] = 0;
    let i: usize = 14;
    
    loop {
        buf[i] = (val % 10) as u8 + 48;
        val /= 10;
        if val == 0 {
            libc::puts(&buf[i]);
            break;
        }
        i -= 1;
    }
}

fn is_prime(v: i64) -> bool {
    let i: i64 = 2;
    while i < v {
        if v % i == 0 {
            return false;
        }
        i += 1;
    }
    true
}

fn print_filtered(lower: i64, upper: i64, filter: fn(i64) -> bool) {
    while lower < upper {
        if filter(lower) {
            write_number(lower)
        }
        lower += 1;
    }
}

#[export]
fn main(argc: i32, argv: &&u8) {
    print_filtered(1, 100, |p| p < 10);
    print_filtered(1, 100, |p| is_prime(p));
}
